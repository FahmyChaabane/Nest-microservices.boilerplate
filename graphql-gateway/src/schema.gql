# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type MovieType {
  id: Int!
  title: String!
  synopsis: String!
  genre: [AllowedCategories!]!
  ranked: Int!
  score: Float!
  created_at: String!
  updated_at: String!
}

enum AllowedCategories {
  COMEDY
  SPORTS
  DRAMA
  SCHOOL
  MUSIC
  ROMANCE
  ADVENTURE
  SCI_FICT
  MYSTERY
  FANTASY
  ACTION
  MAGIC
  HISTORICAL
  PARODY
}

type AnimeType {
  id: Int!
  title: String!
  synopsis: String!
  genre: [AllowedCategories!]!
  ranked: Int!
  score: Float!
  episodes: Int
  created_at: String!
  updated_at: String!
}

type UserType {
  id: Int!
  firstName: String!
  lastName: String!
  birth: String!
  email: String!
  created_at: String!
  updated_at: String!
  movies: [MovieType!]!
  animes: [AnimeType!]!
}

type Query {
  sayHello: String!
  sayJavascript: String!
  getUserById: UserType!
  getAllMovies: [MovieType!]!
  getAllMoviesOfUser: [MovieType!]!
  getAllAnimes: [AnimeType!]!
  getAllAnimesOfUser: [AnimeType!]!
}

type Mutation {
  registerUser(registerInput: RegisterInput!): UserType!
  loginUser(loginInput: LoginInput!): String!
  registerMovie(movieInput: MovieInput!): Boolean!
  registerAnime(animeInput: AnimeInput!): Boolean!
}

input RegisterInput {
  firstName: String!
  lastName: String!
  birth: DateTime!
  email: String!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  email: String!
  password: String!
}

input MovieInput {
  title: String!
  synopsis: String!
  genre: [AllowedCategories!]!
  ranked: Int!
  score: Float!
  userId: Int!
}

input AnimeInput {
  title: String!
  synopsis: String!
  genre: [AllowedCategories!]!
  ranked: Int!
  score: Float!
  userId: Int!
  episodes: Int = 0
  IsMovie: Boolean
}